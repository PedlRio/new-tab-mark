{"ast":null,"code":"import Tiptap from '../components/tiptap.vue';\nimport SidebarMenu from '../components/sidebar.vue';\nexport default {\n  name: 'App',\n  components: {\n    SidebarMenu,\n    Tiptap\n  },\n  methods: {\n    criarEditorTiptap(novaNota) {\n      // Aqui você pode criar um novo editor Tiptap usando uma referência ao componente Tiptap\n      // Vou mostrar um exemplo básico aqui, você pode ajustá-lo conforme necessário\n      this.$refs.tiptapEditor.editor.destroy(); // Destruir editor existente (se houver)\n      this.$refs.tiptapEditor.initializeEditor(); // Inicializar novo editor\n      this.$refs.tiptapEditor.loadNoteContent(novaNota);\n    },\n    carregarNotaTiptap(nota) {\n      this.$refs.tiptapEditor.loadNoteContent(nota);\n    },\n    AtualziaNotaTiptap(content) {\n      const ultimaNotaSelecionada = this.$refs.Sidebar.ultimaNotaSelecionada;\n      if (ultimaNotaSelecionada) {\n        const contentWithImages = this.replaceBase64Images(content);\n        ultimaNotaSelecionada.content = contentWithImages;\n        console.log('Conteúdo atualizado:', content);\n        this.salvarNotaAtualizada(ultimaNotaSelecionada);\n      } else {\n        console.error('Nenhuma nota selecionada para atualizar.');\n      }\n    },\n    // Função para substituir imagens base64 no conteúdo da nota\n    replaceBase64Images(content) {\n      const ultimaNotaSelecionada = this.$refs.Sidebar.ultimaNotaSelecionada;\n      // Supondo que o conteúdo tenha uma tag de imagem como <img src=\"data:image/png;base64,...\"><img src=\"data:image/png;base64,\n      const regex = /<img[^>]+src=\"data:image\\/[^;]+;base64,([^\"]+)\"[^>]*>/g;\n      const replacedContent = content.replace(regex, (match, base64) => {\n        // Substitui a tag <img> com um marcador que pode ser manipulado posteriormente\n        localStorage.setItem(`nota_${ultimaNotaSelecionada.id}`, base64);\n        return '<img data-base64=\"\">';\n      });\n      console.log(replacedContent);\n      return replacedContent;\n    },\n    // Função para carregar as imagens base64 novamente no conteúdo\n    loadBase64Images(content) {\n      const regex = /<img[^>]+data-base64=\"([^\"]+)\"[^>]*>/g;\n      const replacedContent = content.replace(regex, (match, base64) => {\n        // Substitui a tag com a imagem base64\n        return `<img src=\"data:image/png;base64,${base64}\">`;\n      });\n      return replacedContent;\n    },\n    salvarNotaAtualizada(nota) {\n      const notas = this.$refs.Sidebar.notas;\n      const index = notas.findIndex(n => n.id === nota.id);\n      if (index !== -1) {\n        notas.splice(index, 1, nota); // Substitui a nota na lista de notas pelo índice\n        localStorage.setItem('notas', JSON.stringify(notas)); // Salva a lista atualizada no localStorage\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}