{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.functionProp = void 0;\nconst validators_1 = require(\"../validators\");\n/* eslint-disable @typescript-eslint/ban-types */\n/**\n * Allows any function. No further runtime validation is performed by default.\n *\n * Type parameter `T` can be used to restrict the type to a specific function signature at compile time.\n *\n * @param validator - Optional function for further runtime validation; should return `undefined` if valid, or an error string if invalid.\n */\nconst functionProp = validator => ({\n  optional: {\n    type: Function,\n    required: false,\n    default: undefined,\n    validator: (0, validators_1.vuePropValidator)(validator)\n  },\n  nullable: {\n    type: Function,\n    required: false,\n    default: null,\n    validator: (0, validators_1.vuePropValidator)(validator)\n  },\n  required: {\n    type: Function,\n    required: true,\n    validator: (0, validators_1.vuePropValidator)(validator)\n  }\n});\nexports.functionProp = functionProp;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}