{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      notas: this.recuperarNotasSalvas() || [],\n      // Recupera notas salvas\n      ultimaNotaSelecionada: null\n    };\n  },\n  methods: {\n    criarNota() {\n      const novaNota = {\n        id: Date.now(),\n        // Gera um ID único usando timestamp\n        title: `Nota ${this.notas.length + 1}`,\n        content: `<h1>Nota ${this.notas.length + 1}</h1><p>Conteúdo da nova nota</p>`\n      };\n      this.notas.push(novaNota);\n      this.salvarNotas(this.notas, novaNota);\n      this.$emit('notaCriada', novaNota);\n      this.ultimaNotaSelecionada = novaNota;\n      localStorage.setItem('lastEditNote', novaNota.id);\n    },\n    excluirNota(index) {\n      if (this.notas.length === 0) {\n        const notavazia = [];\n        this.$emit('notaSelecionada', notavazia);\n      } else if (this.notas.length - 1 === index) {\n        const tt = this.notas.length + 1;\n        console.log(index);\n        console.log(tt.content);\n        // this.notas.splice(index, 1, nota)\n      } else {\n        console.log('meio');\n        this.notas.splice(index, 1); // Remove a nota pelo índice\n      }\n\n      this.salvarNotas(this.notas); // Salva as notas após a exclusão\n    },\n\n    salvarNotas(notas) {\n      localStorage.setItem('notas', JSON.stringify(notas)); // Salva as notas no localStorage\n    },\n\n    recuperarNotasSalvas() {\n      const notasSalvas = localStorage.getItem('notas'); // Recupera as notas do localStorage\n      return notasSalvas ? JSON.parse(notasSalvas) : null; // Retorna as notas recuperadas (ou null se não houver notas)\n    },\n\n    selecionarNota(nota) {\n      this.$emit('notaSelecionada', nota); // Emitir evento 'notaSelecionada'\n      this.ultimaNotaSelecionada = nota;\n      localStorage.setItem('lastEditNote', this.ultimaNotaSelecionada.id);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}